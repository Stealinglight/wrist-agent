# Wrist Agent Environment Configuration
# Copy this file to .env and configure your values

# AWS Configuration
AWS_REGION=us-west-2
AWS_PROFILE=default

# Bedrock Configuration
BEDROCK_MODEL_ID=anthropic.claude-sonnet-4-20250514-v1:0

# Bedrock Authentication (Hybrid Approach):
# The system supports multiple authentication methods with automatic fallback:
#
# Method 1: Local Development with Direct API Key
# - Set BEDROCK_API_KEY for local development and testing
# - This bypasses SSM parameter creation and uses direct environment variable
# - Format: Base64-encoded string that decodes to "AccessKeyId:SecretAccessKey"
BEDROCK_API_KEY=your_base64_encoded_api_key_here
#
# Method 2: Production with Encrypted SSM Parameter (Automatic)
# - When deploying with BEDROCK_API_KEY set, CDK creates encrypted SSM parameter
# - Lambda automatically loads from SSM parameter in production
# - API key is encrypted at rest using AWS KMS
# - More secure for production environments
#
# Method 3: IAM Role Fallback
# - If no API key is found, falls back to Lambda execution role
# - Requires bedrock:InvokeModel permissions on the Lambda role
# - Comment out BEDROCK_API_KEY to use this method

# Security Configuration
CLIENT_TOKEN_PARAM_NAME=/wrist-agent/client-token

# Lambda Configuration  
LAMBDA_TIMEOUT=30
LAMBDA_MEMORY=256

# Development Configuration
CDK_DEBUG=false
LOG_LEVEL=INFO

# Optional: Custom deployment settings
STACK_NAME=WristAgentStack
DEPLOYMENT_ENVIRONMENT=dev
